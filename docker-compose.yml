version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tasks_dashboard_app
    ports:
      - "8080:8080"
    environment:
      - JWT_ACCESS_SECRET= "jkhsdfJdsfhjweruh234hjkasdf8123edjwk24gi234jkh1324123regscd3124d"
      - JWT_REFRESH_SECRET="j2hs3fJ12fhjweruh234hjkagfd4f3823edjwk24i234jkh124123regscd3124d"
      - JWT_ACCESS_EXPIRATION_IN_MS=1800000
      - JWT_REFRESH_EXPIRATION_IN_MS=259200000
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/dashboard_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456789
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - db
      - redis
    restart: on-failure

  db:
    container_name: tasks_dashboard_db
    image: postgres:16-alpine3.17
    environment:
      POSTGRES_DB: "dashboard_db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "123456789"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d dashboard_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  redis:
    image: redis:6.0.4-alpine3.12
    container_name: tasks_dashboard_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 5
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: on-failure

volumes:
  postgres_data:
  redis_data: